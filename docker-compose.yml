version: '3'
services:

  mq:
    image: rabbitmq:latest
    container_name: messenger
    expose:
      - "5672"
    ports:
      - "5672:5672"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:5672"]
        interval: 5s
        timeout: 2s
        retries: 3

  redis:
    image: redis:latest
    container_name: pokedex
    expose:
      - 6379
    ports:
      - "6379:6379"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:6379"]
        interval: 5s
        timeout: 2s
        retries: 3

  frontend:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    container_name: frontend
    volumes:
      - ./api:/api
    expose:
      - 5000
    links:
      - mq
    depends_on:
      - mq
    environment:
      - MQ_URL=amqp://mq:5672
      - FLASK_APP=/api/app.py
      - FLASK_ENV=development
    env_file:
      - queues.env
    # TODO: set user:group

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    container_name: backend
    volumes:
      - ./backend:/backend
    links:
      - mq
      - redis
    depends_on:
      - mq
      - redis
    environment:
      - MQ_URL=amqp://mq:5672
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - queues.env
